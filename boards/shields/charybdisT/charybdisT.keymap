/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>
 #include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};
&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <16>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};
/ {
        macros {
            double_yank: double_yank {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <&kp Y &kp Y>;
                label = "DOUBLE_YANK";
            };

            yank_end_line: yank_end_line {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <&kp Y &kp DOLLAR>;
                label = "YANK_END_LINE";
            };

            yank_all_file: yank_all_file {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <&kp Y &kp LS(G)>;
                label = "YANK_ALL_FILE";
            };

            yank_another_end_file: yank_another_end_file {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <&kp Y &kp G &kp G>;
                label = "YANK_ANOTHER_END_FILE";
            };
    };
       keymap {
              compatible = "zmk,keymap";

              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
 // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
 // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
 // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |
                        bindings = <
   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6 &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESCAPE
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp EQUAL
                  &kp LGUI &mo 1 &kp ENTER   &kp SPACE &mo 6 &kp RALT
                        >;
              };
              NAV {
                bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &kp LC(R)  &kp LC(C)  &kp UP  &kp LC(V)  &kp LC(X)  &kp LC(U)  
    &trans  &kp LSHFT  &kp LCTRL  &kp LGUI  &kp LALT  &trans  &kp CAPS  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp HOME  &kp END  &trans  &trans  &trans  
                    &trans  &trans  &trans  &trans  &mo 2  &trans
                >;
            };
                Media {
                    bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &ext_power EP_TOG  &trans  &kp C_VOL_DN  &kp C_VOLUME_UP  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
                    &trans  &mo 3  &trans  &trans  &trans  &trans
                >;
            };
                Vim {
                    bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &kp O  &kp J  &kp A  &trans  &trans  &kp LC(R)  &kp P  &kp Y  &kp D  &kp U  &trans  
    &trans  &kp H  &kp K  &kp L  &trans  &trans  &trans  &double_yank  &yank_end_line  &yank_another_end_file  &yank_all_file  &trans
    &trans  &kp N0  &trans  &kp DOLLAR  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
                    &trans  &trans  &trans  &trans  &mo 4  &trans
                >;
            };
                SYM {
                    bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &kp LS(LBRC)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(RBRC)  &trans  &trans  &trans  &trans  
    &trans  &trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)  &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(PIPE)  &trans  &trans  &trans  &trans  &trans  
                    &trans  &trans  &kp LS(LPAR)  &mo 5  &kp LS(UNDER)  &trans  &trans  &trans
                >;
            };
                FUNC {
                    bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &kp F5  &kp F6  &kp F7  &kp F8  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &kp F1  &kp F2  &kp F3  &kp F4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
                    &trans  &trans  &trans  &trans  &mo 6  &trans
                >;
            };
            layer_6 {
                bindings = <
    &mo 1  &mo 1  &mo 2  &mo 3  &mo 4  &mo 5  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
                    &trans  &to 0  &trans  &trans  &trans  &trans
                >;
            };
       };
};